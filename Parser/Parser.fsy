%{

/// Parse tree of an S-expression
type SExprView =
| NilV
| FalseV
| TrueV
| IntV of int
| RealV of float
| StrV of string
| SymV of string
| QuoteV of SExprView
| QuasiquoteV of SExprView
| UnquoteV of SExprView
| ProperListV of SExprView list
| DottedListV of SExprView list * SExprView

%}

%start start

%token OPEN_PAREN
%token CLOSE_PAREN
%token OPEN_BRACKET
%token CLOSE_BRACKET
%token DOT
%token QUOTE
%token QUASIQUOTE
%token UNQUOTE
%token TRUE
%token FALSE
%token <string> STRING
%token <string> SYMBOL
%token <int> INT
%token <float> REAL
%token EOF

%type <SExprView list> start

%%

start:
  EOF { [] }
| nonempty_proper_list_body EOF { $1 }

// Left recursion is faster than right recursion.
// http://epaperpress.com/lexandyacc/rec.html

// What goes inside between ( and ):
// List items or dotted list items
nonempty_list_body:
| nonempty_proper_list_body DOT value DOT value { ProperListV ($3 :: ($1 @ [$5])) }
| nonempty_proper_list_body DOT value { DottedListV($1, $3) }
| nonempty_proper_list_body { ProperListV $1 }

nonempty_proper_list_body:
| value { [$1] }
| nonempty_proper_list_body value { $1 @ [$2] }

value:
  OPEN_PAREN CLOSE_PAREN { ProperListV [] }
| OPEN_BRACKET CLOSE_BRACKET { ProperListV [] }
| OPEN_PAREN nonempty_list_body CLOSE_PAREN { $2 }
| OPEN_BRACKET nonempty_list_body CLOSE_BRACKET { $2 }
| FALSE { FalseV }
| TRUE { TrueV }
| STRING { StrV $1 }
| SYMBOL { SymV $1 }
| INT { IntV $1 }
| REAL { RealV $1 }
| QUOTE value { QuoteV $2 }
| QUASIQUOTE value { QuasiquoteV $2 }
| UNQUOTE value { UnquoteV $2 }

